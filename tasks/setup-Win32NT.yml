---
# tasks file for install opentofu on Windows system

- name: Windows | Find all versions of opentofu
  ansible.windows.win_uri:
    url: https://api.github.com/repos/opentofu/opentofu/releases/latest
    return_content: true
  register: opentofu_index
  when: opentofu_version == "latest"
  check_mode: false

- name: Windows | Finds the latest opentofu version when latest var is define
  ansible.builtin.set_fact:
    opentofu_version_to_install: "{{ (opentofu_index.content | from_json).name }}"
  when: opentofu_version == "latest"

- name: Windows | Use the specified opentofu version when latest var is not define
  ansible.builtin.set_fact:
    opentofu_version_to_install: "{{ opentofu_version }}"
  when: opentofu_version != "latest"

# This task avoids downloading opentofu every time
- name: Windows | Check if opentofu is present on Windows with the right version
  ansible.windows.win_command: "{{ opentofu_path }}/tofu --version"
  register: opentofu_installed_version
  ignore_errors: true
  changed_when: false
  failed_when: false

- name: Windows | Download opentofu
  ansible.windows.win_get_url:
    url: "{{ opentofu_pkg_url }}"
    dest: '%TEMP%\opentofu_{{ opentofu_version }}_windows_amd64.zip'
  when: opentofu_version not in ( opentofu_installed_version.stdout_lines | default(['empty']) | first )

- name: Windows | Create opentofu folder
  ansible.windows.win_file:
    path: "{{ opentofu_path }}"
    state: directory

- name: Windows | Install opentofu
  community.windows.win_unzip:
    src: '%TEMP%\opentofu_{{ opentofu_version }}_windows_amd64.zip'
    dest: "{{ opentofu_path }}"
  when: opentofu_version not in ( opentofu_installed_version.stdout_lines | default(['empty']) | first )

- name: Windows | Add opentofu to PATH
  ansible.windows.win_path:
    elements: "{{ opentofu_path }}"
